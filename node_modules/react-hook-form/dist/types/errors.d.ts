<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 084ab4c2cff1d6c77666609f5f2d3443c1239351
>>>>>>> d177c941d932e6db29c7c5ba41f5a20d633676af
import { FieldValues, InternalFieldName, Ref } from './fields';
import { DeepMap, DeepPartial, LiteralUnion } from './utils';
import { RegisterOptions, ValidateResult } from './validator';
export declare type Message = string;
export declare type MultipleFieldErrors = {
    [K in keyof RegisterOptions]?: ValidateResult;
} & {
    [key: string]: ValidateResult;
};
export declare type FieldError = {
    type: LiteralUnion<keyof RegisterOptions, string>;
    ref?: Ref;
    types?: MultipleFieldErrors;
    message?: Message;
};
export declare type ErrorOption = {
    message?: Message;
    type?: LiteralUnion<keyof RegisterOptions, string>;
    types?: MultipleFieldErrors;
};
export declare type FieldErrors<TFieldValues extends FieldValues = FieldValues> = DeepMap<DeepPartial<TFieldValues>, FieldError>;
export declare type InternalFieldErrors = Partial<Record<InternalFieldName, FieldError>>;
<<<<<<< HEAD
=======
=======
<<<<<<< HEAD
=======
=======
=======
>>>>>>> 08bbc92f8b5e1b3f692406d6a346958aada0c6d2
>>>>>>> d177c941d932e6db29c7c5ba41f5a20d633676af
>>>>>>> cafe42a3529a1d4a4ae998994a659cd3bf99a5e3
import { FieldValues, InternalFieldName, Ref } from './fields';
import { DeepMap, DeepPartial, LiteralUnion } from './utils';
import { RegisterOptions, ValidateResult } from './validator';
export declare type Message = string;
export declare type MultipleFieldErrors = {
    [K in keyof RegisterOptions]?: ValidateResult;
} & {
    [key: string]: ValidateResult;
};
export declare type FieldError = {
    type: LiteralUnion<keyof RegisterOptions, string>;
    ref?: Ref;
    types?: MultipleFieldErrors;
    message?: Message;
};
export declare type ErrorOption = {
    message?: Message;
    type?: LiteralUnion<keyof RegisterOptions, string>;
    types?: MultipleFieldErrors;
};
export declare type FieldErrors<TFieldValues extends FieldValues = FieldValues> = DeepMap<DeepPartial<TFieldValues>, FieldError>;
export declare type InternalFieldErrors = Partial<Record<InternalFieldName, FieldError>>;
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 3eaa855b (haciendo npm install)
=======
<<<<<<< HEAD
>>>>>>> 3eaa855b (haciendo npm install)
=======
>>>>>>> 08bbc92f8b5e1b3f692406d6a346958aada0c6d2
>>>>>>> 084ab4c2cff1d6c77666609f5f2d3443c1239351
>>>>>>> d177c941d932e6db29c7c5ba41f5a20d633676af
>>>>>>> cafe42a3529a1d4a4ae998994a659cd3bf99a5e3
//# sourceMappingURL=errors.d.ts.map