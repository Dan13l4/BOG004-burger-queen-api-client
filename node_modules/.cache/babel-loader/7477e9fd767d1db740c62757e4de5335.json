{"ast":null,"code":"import axios from 'axios';\nimport { getToken } from './api';\nconst BASE_URL = 'http://localhost:8080/'; // Funcion para llamar los productos desde la api\n\nconst callProducts = () => {\n  return axios({\n    method: \"GET\",\n    url: BASE_URL + 'products',\n    headers: {\n      authorization: \"Bearer \" + getToken()\n    }\n  });\n}; // Funcion para crear un producto\n\n\nconst createProduct = product => {\n  return axios.post(BASE_URL + 'products', product, {\n    headers: {\n      authorization: 'Bearer ' + getToken()\n    }\n  });\n}; // Funcion para borrar el producto\n\n\nconst deleteProduct = id => {\n  return axios.delete(BASE_URL + 'products/' + id, {\n    headers: {\n      authorization: 'Bearer ' + getToken()\n    }\n  });\n}; // Funcion para crear una orden\n\n\nconst createOrder = order => {\n  return axios.post(BASE_URL + 'orders', order, {\n    headers: {\n      authorization: 'Bearer ' + getToken()\n    }\n  });\n}; // Funcion para ver la orden\n\n\nconst getOrder = () => {\n  return axios.get(BASE_URL + 'orders', {\n    headers: {\n      authorization: 'Bearer ' + getToken()\n    }\n  });\n};\n\nexport { callProducts, createProduct, deleteProduct, createOrder, getOrder };","map":{"version":3,"names":["axios","getToken","BASE_URL","callProducts","method","url","headers","authorization","createProduct","product","post","deleteProduct","id","delete","createOrder","order","getOrder","get"],"sources":["/Users/paolahuyo/PROYECTOS-LABORATORIA/BOG004-burger-queen-api-client/src/api/Products.js"],"sourcesContent":["import axios from 'axios';\nimport { getToken } from './api';\nconst BASE_URL = 'http://localhost:8080/';\n\n// Funcion para llamar los productos desde la api\nconst callProducts = () => {\n    return axios({method: \"GET\", url:BASE_URL+'products', headers: {\n        authorization: \"Bearer \" + getToken()\n    }} );\n}\n\n // Funcion para crear un producto\nconst createProduct = (product) => {\n    return axios.post(BASE_URL+'products', product, {\n        headers: {\n            authorization: 'Bearer ' + getToken()\n        }\n    });\n}\n\n// Funcion para borrar el producto\nconst deleteProduct = (id) => {\n    return axios.delete(BASE_URL+'products/'+id, {\n        headers: {\n            authorization: 'Bearer ' + getToken()\n        }\n    });\n}\n\n// Funcion para crear una orden\nconst createOrder = (order) => {\n    return axios.post(BASE_URL+'orders', order, {\n        headers: {\n            authorization: 'Bearer ' + getToken()\n        }\n    });\n}\n\n// Funcion para ver la orden\nconst getOrder = () => {\n    return axios.get(BASE_URL+'orders', {\n        headers: {\n            authorization: 'Bearer ' + getToken()\n        }\n    });\n}\n\n\nexport {callProducts, createProduct, deleteProduct, createOrder, getOrder} ;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,MAAMC,QAAQ,GAAG,wBAAjB,C,CAEA;;AACA,MAAMC,YAAY,GAAG,MAAM;EACvB,OAAOH,KAAK,CAAC;IAACI,MAAM,EAAE,KAAT;IAAgBC,GAAG,EAACH,QAAQ,GAAC,UAA7B;IAAyCI,OAAO,EAAE;MAC3DC,aAAa,EAAE,YAAYN,QAAQ;IADwB;EAAlD,CAAD,CAAZ;AAGH,CAJD,C,CAMC;;;AACD,MAAMO,aAAa,GAAIC,OAAD,IAAa;EAC/B,OAAOT,KAAK,CAACU,IAAN,CAAWR,QAAQ,GAAC,UAApB,EAAgCO,OAAhC,EAAyC;IAC5CH,OAAO,EAAE;MACLC,aAAa,EAAE,YAAYN,QAAQ;IAD9B;EADmC,CAAzC,CAAP;AAKH,CAND,C,CAQA;;;AACA,MAAMU,aAAa,GAAIC,EAAD,IAAQ;EAC1B,OAAOZ,KAAK,CAACa,MAAN,CAAaX,QAAQ,GAAC,WAAT,GAAqBU,EAAlC,EAAsC;IACzCN,OAAO,EAAE;MACLC,aAAa,EAAE,YAAYN,QAAQ;IAD9B;EADgC,CAAtC,CAAP;AAKH,CAND,C,CAQA;;;AACA,MAAMa,WAAW,GAAIC,KAAD,IAAW;EAC3B,OAAOf,KAAK,CAACU,IAAN,CAAWR,QAAQ,GAAC,QAApB,EAA8Ba,KAA9B,EAAqC;IACxCT,OAAO,EAAE;MACLC,aAAa,EAAE,YAAYN,QAAQ;IAD9B;EAD+B,CAArC,CAAP;AAKH,CAND,C,CAQA;;;AACA,MAAMe,QAAQ,GAAG,MAAM;EACnB,OAAOhB,KAAK,CAACiB,GAAN,CAAUf,QAAQ,GAAC,QAAnB,EAA6B;IAChCI,OAAO,EAAE;MACLC,aAAa,EAAE,YAAYN,QAAQ;IAD9B;EADuB,CAA7B,CAAP;AAKH,CAND;;AASA,SAAQE,YAAR,EAAsBK,aAAtB,EAAqCG,aAArC,EAAoDG,WAApD,EAAiEE,QAAjE"},"metadata":{},"sourceType":"module"}