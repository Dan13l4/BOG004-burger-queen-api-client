{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getOrder } from '../api/Products';\nimport styles from '../components/stylesheets/Waiter.module.css';\nimport NavBar from '../components/NavBar'; // const OrdersClosed = () => {\n// const [ordersClosed, setOrdersClosed] = useState([]);\n// const getOrdersClosed = () => {\n//     getOrder()\n//     .then((res) => {\n//         console.log('resdata',res.data)\n//         setOrdersClosed((res.data).filter((item)=> item.status.includes('closed')))\n//         console.log('ordersClosed', ordersClosed);\n//       })\n//     .catch()\n//     }\n//     useEffect(() => {\n//       getOrdersClosed();\n//     }, [])\n//     const timeToDeliver = (info) => {\n//         const dateNow = info.dateProcessed;\n//         const dateOrder = info.dateEntry;\n//         const restTime = (Date.parse(dateNow) - Date.parse(dateOrder))/1000/60;\n//         return restTime;\n//       }\n//     if (ordersClosed !== undefined && ordersClosed[0] !== undefined)\n//     return (\n//         <>\n//         <NavBar></NavBar>\n//         <h1 className={styles.h1}>Orders Closed</h1>\n//         <section className='container d-flex justify-content-center align-items-center h-100'>\n//         <div className='card-deck'>\n//             {ordersClosed.map((order) => (\n//             <section className='col-md-4' key={order.id}>\n//                 <div className='card' style={{ marginBottom: 30 }}>\n//                     <div className='card-body'>\n//                     <h3 className={styles.Orderstext}>ORDER #{order.id}</h3>\n//                         <h6 className={styles.Orderstext}>Client: {order.client}</h6>\n//                         <p className={styles.Closed}>{order.status}</p>\n//                         <p className={styles.Closed}>Delivered: {order.dateProcessed}<br/>Cooking time: {timeToDeliver(order)} min</p>\n//                         <p className={styles.Orderstext}>Created: {order.dateEntry}</p>\n//                         <ul className=\"list-group list-group-flush\">\n//                         <h6 className={styles.Orderstext}>Products</h6>\n//                             {order.products.map((item) => (\n//                             <li className=\"list-group-item\">{item.product.name} {item.amount} Un ${item.product.price}</li>\n//                             ))}\n//                         </ul>\n//                     </div>\n//                 </div>\n//             </section>\n//             ))}\n//             <div className={styles.SectionTotal}>\n//             <button className='btn btn-info btn-lg' style={{width:300, alignSelf:'center'}}><Link className={styles.Link} to=\"/\">Sign Out</Link></button>\n//           </div>\n//         </div>\n//         </section>\n//         </>\n//         );\n// }\n// export default OrdersClosed;","map":{"version":3,"names":["React","useState","useEffect","Link","getOrder","styles","NavBar"],"sources":["C:/Users/57322/Documents/GitHub/Proyectos Laboratoria/BOG004-burger-queen-api-client/src/pages/OrdersClosed.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getOrder } from '../api/Products';\r\nimport styles from '../components/stylesheets/Waiter.module.css';\r\nimport NavBar from '../components/NavBar';\r\n\r\n// const OrdersClosed = () => {\r\n\r\n// const [ordersClosed, setOrdersClosed] = useState([]);\r\n\r\n// const getOrdersClosed = () => {\r\n//     getOrder()\r\n//     .then((res) => {\r\n//         console.log('resdata',res.data)\r\n//         setOrdersClosed((res.data).filter((item)=> item.status.includes('closed')))\r\n//         console.log('ordersClosed', ordersClosed);\r\n//       })\r\n//     .catch()\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//       getOrdersClosed();\r\n//     }, [])\r\n\r\n//     const timeToDeliver = (info) => {\r\n//         const dateNow = info.dateProcessed;\r\n//         const dateOrder = info.dateEntry;\r\n//         const restTime = (Date.parse(dateNow) - Date.parse(dateOrder))/1000/60;\r\n//         return restTime;\r\n//       }\r\n\r\n//     if (ordersClosed !== undefined && ordersClosed[0] !== undefined)\r\n//     return (\r\n//         <>\r\n//         <NavBar></NavBar>\r\n//         <h1 className={styles.h1}>Orders Closed</h1>\r\n//         <section className='container d-flex justify-content-center align-items-center h-100'>\r\n//         <div className='card-deck'>\r\n//             {ordersClosed.map((order) => (\r\n//             <section className='col-md-4' key={order.id}>\r\n//                 <div className='card' style={{ marginBottom: 30 }}>\r\n//                     <div className='card-body'>\r\n//                     <h3 className={styles.Orderstext}>ORDER #{order.id}</h3>\r\n//                         <h6 className={styles.Orderstext}>Client: {order.client}</h6>\r\n//                         <p className={styles.Closed}>{order.status}</p>\r\n//                         <p className={styles.Closed}>Delivered: {order.dateProcessed}<br/>Cooking time: {timeToDeliver(order)} min</p>\r\n//                         <p className={styles.Orderstext}>Created: {order.dateEntry}</p>\r\n//                         <ul className=\"list-group list-group-flush\">\r\n//                         <h6 className={styles.Orderstext}>Products</h6>\r\n//                             {order.products.map((item) => (\r\n//                             <li className=\"list-group-item\">{item.product.name} {item.amount} Un ${item.product.price}</li>\r\n//                             ))}\r\n//                         </ul>\r\n//                     </div>\r\n//                 </div>\r\n//             </section>\r\n//             ))}\r\n//             <div className={styles.SectionTotal}>\r\n//             <button className='btn btn-info btn-lg' style={{width:300, alignSelf:'center'}}><Link className={styles.Link} to=\"/\">Sign Out</Link></button>\r\n//           </div>\r\n//         </div>\r\n//         </section>\r\n//         </>\r\n//         );\r\n// }\r\n\r\n// export default OrdersClosed;"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}