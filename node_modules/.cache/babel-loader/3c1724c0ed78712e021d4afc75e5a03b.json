{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\57322\\\\Documents\\\\GitHub\\\\Proyectos Laboratoria\\\\BOG004-burger-queen-api-client\\\\src\\\\components\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport orderIcon from '../assets/order.png';\nimport takeAwayOrder from '../assets/take-away.png';\nimport CartContext from '../Context/CartContext';\nimport styles from '../components/stylesheets/Waiter.module.css';\nimport ItemCart from \"./ItemCart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  _s();\n\n  /* Creamos 2 estados, uno para ver si el carrito esta abierto o no \r\n  y otro para obtener la cantidad de productos que tenemos en el carrito */\n  // const [cartOpen, setCartOpen] = useState(false);\n  const [productsLenght, setProductsLength] = useState(0);\n  /* Traemos del context los productos del carrito */\n\n  const {\n    cartItems\n  } = useContext(CartContext);\n  /* Cada vez que se modifica el carrito, actualizamos la cantidad de productos */\n\n  useEffect(() => {\n    setProductsLength(cartItems.reduce((previous, current) => previous + current.amount, 0));\n  }, [cartItems]);\n  /* Obtenemos el precio total */\n\n  const total = cartItems.reduce((previous, current) => previous + current.amount * current.price, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cartContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonCart,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: orderIcon,\n          alt: \"order icon\",\n          style: {\n            width: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.productNumber,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: productsLenght\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), cartItems && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Empty Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cartItems.map((item, i) => /*#__PURE__*/_jsxDEV(ItemCart, {\n          item: item\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total: $\", total, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"bO9AaT3f/1spCib3D8CfBw+B1+c=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useContext","useEffect","useState","orderIcon","takeAwayOrder","CartContext","styles","ItemCart","Cart","productsLenght","setProductsLength","cartItems","reduce","previous","current","amount","total","price","cartContainer","buttonCart","width","productNumber","length","map","item","i"],"sources":["C:/Users/57322/Documents/GitHub/Proyectos Laboratoria/BOG004-burger-queen-api-client/src/components/Cart.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport orderIcon from '../assets/order.png'\r\nimport takeAwayOrder from '../assets/take-away.png'\r\nimport CartContext from '../Context/CartContext';\r\nimport styles from '../components/stylesheets/Waiter.module.css'\r\nimport ItemCart from \"./ItemCart\";\r\n\r\nconst Cart = () => {\r\n\r\n     /* Creamos 2 estados, uno para ver si el carrito esta abierto o no \r\n  y otro para obtener la cantidad de productos que tenemos en el carrito */\r\n    // const [cartOpen, setCartOpen] = useState(false);\r\n    const [productsLenght, setProductsLength] = useState(0);\r\n\r\n    /* Traemos del context los productos del carrito */\r\n    const { cartItems } = useContext(CartContext);\r\n\r\n    /* Cada vez que se modifica el carrito, actualizamos la cantidad de productos */\r\n    useEffect(() => {\r\n        setProductsLength(\r\n            cartItems.reduce((previous, current) => previous + current.amount, 0)\r\n        )\r\n    }, [cartItems]);\r\n\r\n    /* Obtenemos el precio total */\r\n    const total = cartItems.reduce((previous, current) => previous + current.amount * current.price, 0);\r\n\r\n\r\n    return (\r\n        <div className={styles.cartContainer}>\r\n            <div >\r\n                <div className={styles.buttonCart}>\r\n                        <img src={orderIcon} alt=\"order icon\" style={{ width: 100 }} />\r\n                </div>\r\n            </div>\r\n                <div className={styles.productNumber}><p>{productsLenght}</p>\r\n            </div>\r\n\r\n            {cartItems && (\r\n                <div>\r\n                    <h2>Order Cart</h2>\r\n                    {cartItems.length ===0 ? <p> Empty Cart</p> : (\r\n                        <div>{cartItems.map((item, i) => (\r\n                            <ItemCart key={i} item={item}/>\r\n                        ))}</div>\r\n                        )}\r\n                        <h2>Total: ${total} </h2>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEd;AACL;EACI;EACA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,CAAD,CAApD;EAEA;;EACA,MAAM;IAAES;EAAF,IAAgBX,UAAU,CAACK,WAAD,CAAhC;EAEA;;EACAJ,SAAS,CAAC,MAAM;IACZS,iBAAiB,CACbC,SAAS,CAACC,MAAV,CAAiB,CAACC,QAAD,EAAWC,OAAX,KAAuBD,QAAQ,GAAGC,OAAO,CAACC,MAA3D,EAAmE,CAAnE,CADa,CAAjB;EAGH,CAJQ,EAIN,CAACJ,SAAD,CAJM,CAAT;EAMA;;EACA,MAAMK,KAAK,GAAGL,SAAS,CAACC,MAAV,CAAiB,CAACC,QAAD,EAAWC,OAAX,KAAuBD,QAAQ,GAAGC,OAAO,CAACC,MAAR,GAAiBD,OAAO,CAACG,KAA5E,EAAmF,CAAnF,CAAd;EAGA,oBACI;IAAK,SAAS,EAAEX,MAAM,CAACY,aAAvB;IAAA,wBACI;MAAA,uBACI;QAAK,SAAS,EAAEZ,MAAM,CAACa,UAAvB;QAAA,uBACQ;UAAK,GAAG,EAAEhB,SAAV;UAAqB,GAAG,EAAC,YAAzB;UAAsC,KAAK,EAAE;YAAEiB,KAAK,EAAE;UAAT;QAA7C;UAAA;UAAA;UAAA;QAAA;MADR;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAMQ;MAAK,SAAS,EAAEd,MAAM,CAACe,aAAvB;MAAA,uBAAsC;QAAA,UAAIZ;MAAJ;QAAA;QAAA;QAAA;MAAA;IAAtC;MAAA;MAAA;MAAA;IAAA,QANR,EASKE,SAAS,iBACN;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKA,SAAS,CAACW,MAAV,KAAoB,CAApB,gBAAwB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAxB,gBACG;QAAA,UAAMX,SAAS,CAACY,GAAV,CAAc,CAACC,IAAD,EAAOC,CAAP,kBAChB,QAAC,QAAD;UAAkB,IAAI,EAAED;QAAxB,GAAeC,CAAf;UAAA;UAAA;UAAA;QAAA,QADE;MAAN;QAAA;QAAA;QAAA;MAAA,QAHR,eAOQ;QAAA,uBAAaT,KAAb;MAAA;QAAA;QAAA;QAAA;MAAA,QAPR;IAAA;MAAA;MAAA;MAAA;IAAA,QAVR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH,CA5CD;;GAAMR,I;;KAAAA,I;AA8CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}