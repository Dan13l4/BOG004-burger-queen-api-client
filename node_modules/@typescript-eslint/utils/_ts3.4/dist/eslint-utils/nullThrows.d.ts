<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 084ab4c2cff1d6c77666609f5f2d3443c1239351
>>>>>>> d177c941d932e6db29c7c5ba41f5a20d633676af
/**
 * A set of common reasons for calling nullThrows
 */
declare const NullThrowsReasons: {
    readonly MissingParent: "Expected node to have a parent.";
    readonly MissingToken: (token: string, thing: string) => string;
};
/**
 * Assert that a value must not be null or undefined.
 * This is a nice explicit alternative to the non-null assertion operator.
 */
declare function nullThrows<T>(value: T | null | undefined, message: string): T;
export { nullThrows, NullThrowsReasons };
//# sourceMappingURL=nullThrows.d.ts.map
<<<<<<< HEAD
=======
=======
<<<<<<< HEAD
=======
=======
=======
>>>>>>> 08bbc92f8b5e1b3f692406d6a346958aada0c6d2
>>>>>>> d177c941d932e6db29c7c5ba41f5a20d633676af
>>>>>>> cafe42a3529a1d4a4ae998994a659cd3bf99a5e3
/**
 * A set of common reasons for calling nullThrows
 */
declare const NullThrowsReasons: {
    readonly MissingParent: "Expected node to have a parent.";
    readonly MissingToken: (token: string, thing: string) => string;
};
/**
 * Assert that a value must not be null or undefined.
 * This is a nice explicit alternative to the non-null assertion operator.
 */
declare function nullThrows<T>(value: T | null | undefined, message: string): T;
export { nullThrows, NullThrowsReasons };
//# sourceMappingURL=nullThrows.d.ts.map
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 3eaa855b (haciendo npm install)
=======
<<<<<<< HEAD
>>>>>>> 3eaa855b (haciendo npm install)
=======
>>>>>>> 08bbc92f8b5e1b3f692406d6a346958aada0c6d2
>>>>>>> 084ab4c2cff1d6c77666609f5f2d3443c1239351
>>>>>>> d177c941d932e6db29c7c5ba41f5a20d633676af
>>>>>>> cafe42a3529a1d4a4ae998994a659cd3bf99a5e3
