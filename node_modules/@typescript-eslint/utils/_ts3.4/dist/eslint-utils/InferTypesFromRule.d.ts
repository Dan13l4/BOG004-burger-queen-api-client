<<<<<<< HEAD
<<<<<<< HEAD
import { RuleCreateFunction, RuleModule } from '../ts-eslint';
/**
 * Uses type inference to fetch the TOptions type from the given RuleModule
 */
declare type InferOptionsTypeFromRule<T> = T extends RuleModule<infer _TMessageIds, infer TOptions> ? TOptions : T extends RuleCreateFunction<infer _TMessageIds, infer TOptions> ? TOptions : unknown;
/**
 * Uses type inference to fetch the TMessageIds type from the given RuleModule
 */
declare type InferMessageIdsTypeFromRule<T> = T extends RuleModule<infer TMessageIds, infer _TOptions> ? TMessageIds : T extends RuleCreateFunction<infer TMessageIds, infer _TOptions> ? TMessageIds : unknown;
export { InferOptionsTypeFromRule, InferMessageIdsTypeFromRule };
//# sourceMappingURL=InferTypesFromRule.d.ts.map
=======
=======
>>>>>>> 08bbc92f8b5e1b3f692406d6a346958aada0c6d2
import { RuleCreateFunction, RuleModule } from '../ts-eslint';
/**
 * Uses type inference to fetch the TOptions type from the given RuleModule
 */
declare type InferOptionsTypeFromRule<T> = T extends RuleModule<infer _TMessageIds, infer TOptions> ? TOptions : T extends RuleCreateFunction<infer _TMessageIds, infer TOptions> ? TOptions : unknown;
/**
 * Uses type inference to fetch the TMessageIds type from the given RuleModule
 */
declare type InferMessageIdsTypeFromRule<T> = T extends RuleModule<infer TMessageIds, infer _TOptions> ? TMessageIds : T extends RuleCreateFunction<infer TMessageIds, infer _TOptions> ? TMessageIds : unknown;
export { InferOptionsTypeFromRule, InferMessageIdsTypeFromRule };
//# sourceMappingURL=InferTypesFromRule.d.ts.map
<<<<<<< HEAD
>>>>>>> 3eaa855b (haciendo npm install)
=======
>>>>>>> 08bbc92f8b5e1b3f692406d6a346958aada0c6d2
