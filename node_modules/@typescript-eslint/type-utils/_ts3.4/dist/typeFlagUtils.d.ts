<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 084ab4c2cff1d6c77666609f5f2d3443c1239351
>>>>>>> d177c941d932e6db29c7c5ba41f5a20d633676af
import * as ts from 'typescript';
/**
 * Gets all of the type flags in a type, iterating through unions automatically
 */
export declare function getTypeFlags(type: ts.Type): ts.TypeFlags;
/**
 * Checks if the given type is (or accepts) the given flags
 * @param isReceiver true if the type is a receiving type (i.e. the type of a called function's parameter)
 */
export declare function isTypeFlagSet(type: ts.Type, flagsToCheck: ts.TypeFlags, isReceiver?: boolean): boolean;
//# sourceMappingURL=typeFlagUtils.d.ts.map
<<<<<<< HEAD
=======
=======
<<<<<<< HEAD
=======
=======
=======
>>>>>>> 08bbc92f8b5e1b3f692406d6a346958aada0c6d2
>>>>>>> d177c941d932e6db29c7c5ba41f5a20d633676af
>>>>>>> cafe42a3529a1d4a4ae998994a659cd3bf99a5e3
import * as ts from 'typescript';
/**
 * Gets all of the type flags in a type, iterating through unions automatically
 */
export declare function getTypeFlags(type: ts.Type): ts.TypeFlags;
/**
 * Checks if the given type is (or accepts) the given flags
 * @param isReceiver true if the type is a receiving type (i.e. the type of a called function's parameter)
 */
export declare function isTypeFlagSet(type: ts.Type, flagsToCheck: ts.TypeFlags, isReceiver?: boolean): boolean;
//# sourceMappingURL=typeFlagUtils.d.ts.map
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 3eaa855b (haciendo npm install)
=======
<<<<<<< HEAD
>>>>>>> 3eaa855b (haciendo npm install)
=======
>>>>>>> 08bbc92f8b5e1b3f692406d6a346958aada0c6d2
>>>>>>> 084ab4c2cff1d6c77666609f5f2d3443c1239351
>>>>>>> d177c941d932e6db29c7c5ba41f5a20d633676af
>>>>>>> cafe42a3529a1d4a4ae998994a659cd3bf99a5e3
